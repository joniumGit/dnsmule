version: '0.0.1'
backend:
  name: 'dnspython.DNSPythonBackend'
  config:
    #    resolver: '8.8.8.8'
    timeout: 2
rules:
  - o365:
    type: dns.regex
    record: txt
    pattern: '^MS=ms'
    identification: MICROSOFT::O365
  - ses:
    type: dns.regex
    record: txt
    pattern: '^amazonses:'
    identification: AMAZON::SES
  - azure:
    type: dns.regex
    record: txt
    pattern: '^.*\.azurewebsites\.'
    identification: MICROSOFT::AZURE
  - generic_verification:
    type: dns.regex
    record: txt
    patterns:
      - '^(.+)(?:-(?:site|domain))?-verification='
      - '^(.+)(?:site|domain)verification'
      - '^(.+)_verify_'
      - '^(\w+)-code:'
    group: 1
  - log_txt:
    description: Logs possibly interesting TXT records
    type: dns.dynamic
    record: txt
    code: |
      from dnsmule.config import get_logger
      
      seen = set()
      
      
      def init():
          get_logger().info('Initializing TXT detector example')
      
      
      def process(record: Record) -> Result:
          data: str = record.data.to_text()
          if 'verif' in data:
              if '=' in data:
                  key = data.partition('=')[0]
                  if key in seen:
                      return
                  seen.add(key)
              get_logger().info(f'Found a verify record: %s', data)

  - cname_providers:
    type: dns.dynamic
    record: cname
    code: |
      cnames = {
          'edgekey.net': 'Akamai CDN',
          'cloudflare.net': 'Cloudflare CDN',
          'cloudfront.net': 'Amazon Cloudfront',
          'github.io': 'GitHub Pages',
          'azureedge.net': 'Azure CDN',
          'awsglobalaccelerator.com': 'Amazon Accelerator',
          'amazonaws.com': 'Amazon Web Services',
          'simpli.fi': 'Simpli ADS',
          'doubleclick.net': 'Doubleclick',
      }
      
      
      def process(record: Record) -> Result:
          result = record.result()
          for key in cnames:
              _key = f'DNS::CIDER::{key.split(".")[0].upper()}'
              if key in record.data.to_text():
                  result.tags.add(_key)
          return result